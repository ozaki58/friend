{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozaki\\\\friend\\\\friend-app\\\\src\\\\Room\\\\RoomList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Threads } from '../Threads';\nimport './Room.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoomList = () => {\n  _s();\n  const [rooms, setRooms] = useState([{\n    id: 1,\n    name: \"一般チャット\",\n    lastMessage: \"こんにちは！\",\n    timestamp: \"10:30\"\n  }, {\n    id: 2,\n    name: \"技術討論\",\n    lastMessage: \"Reactについて質問があります\",\n    timestamp: \"11:45\"\n  }, {\n    id: 3,\n    name: \"雑談部屋\",\n    lastMessage: \"今日の天気いいですね\",\n    timestamp: \"12:15\"\n  }, {\n    id: 4,\n    name: \"プロジェクトA\",\n    lastMessage: \"進捗報告をお願いします\",\n    timestamp: \"13:00\"\n  }, {\n    id: 5,\n    name: \"お知らせ\",\n    lastMessage: \"明日はミーティングがあります\",\n    timestamp: \"14:30\"\n  }]);\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const handleRoomClick = room => {\n    setSelectedRoom(room);\n  };\n  const handleBackClick = () => {\n    setSelectedRoom(null);\n  };\n  if (selectedRoom) {\n    return /*#__PURE__*/_jsxDEV(Threads, {\n      userName: \"\",\n      content: \"\",\n      time: \"\",\n      replyCount: 0,\n      roomName: selectedRoom.name,\n      onBackClick: handleBackClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"room-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"room-list-title\",\n      children: \"\\u30EB\\u30FC\\u30E0\\u4E00\\u89A7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"room-list\",\n      children: rooms.map(room => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"room-item\",\n        onClick: () => handleRoomClick(room),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"room-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"room-name\",\n            children: room.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"last-message\",\n            children: room.lastMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"timestamp\",\n          children: room.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, room.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(RoomList, \"K/8KEWKE1i44PKHtJMeSroudnmg=\");\n_c = RoomList;\nexport default RoomList;\nvar _c;\n$RefreshReg$(_c, \"RoomList\");","map":{"version":3,"names":["React","useState","Threads","jsxDEV","_jsxDEV","RoomList","_s","rooms","setRooms","id","name","lastMessage","timestamp","selectedRoom","setSelectedRoom","handleRoomClick","room","handleBackClick","userName","content","time","replyCount","roomName","onBackClick","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ozaki/friend/friend-app/src/Room/RoomList.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Threads } from '../Threads';\r\nimport './Room.css';\r\n\r\nconst RoomList = () => {\r\n  const [rooms, setRooms] = useState([\r\n    { id: 1, name: \"一般チャット\", lastMessage: \"こんにちは！\", timestamp: \"10:30\" },\r\n    { id: 2, name: \"技術討論\", lastMessage: \"Reactについて質問があります\", timestamp: \"11:45\" },\r\n    { id: 3, name: \"雑談部屋\", lastMessage: \"今日の天気いいですね\", timestamp: \"12:15\" },\r\n    { id: 4, name: \"プロジェクトA\", lastMessage: \"進捗報告をお願いします\", timestamp: \"13:00\" },\r\n    { id: 5, name: \"お知らせ\", lastMessage: \"明日はミーティングがあります\", timestamp: \"14:30\" },\r\n  ]);\r\n\r\n  const [selectedRoom, setSelectedRoom] = useState(null);\r\n\r\n  const handleRoomClick = (room) => {\r\n    setSelectedRoom(room);\r\n  };\r\n\r\n  const handleBackClick = () => {\r\n    setSelectedRoom(null);\r\n  };\r\n\r\n  if (selectedRoom) {\r\n    return (\r\n      <Threads\r\n        userName=\"\"\r\n        content=\"\"\r\n        time=\"\"\r\n        replyCount={0}\r\n        roomName={selectedRoom.name}\r\n        onBackClick={handleBackClick}\r\n      />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"room-list-container\">\r\n      <h1 className=\"room-list-title\">ルーム一覧</h1>\r\n      <div className=\"room-list\">\r\n        {rooms.map((room) => (\r\n          <div key={room.id} className=\"room-item\" onClick={() => handleRoomClick(room)}>\r\n            <div className=\"room-info\">\r\n              <h2 className=\"room-name\">{room.name}</h2>\r\n              <p className=\"last-message\">{room.lastMessage}</p>\r\n            </div>\r\n            <span className=\"timestamp\">{room.timestamp}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoomList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,OAAO,QAAQ,YAAY;AACpC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,CACjC;IAAEQ,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,QAAQ;IAAEC,WAAW,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAQ,CAAC,EACpE;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE,kBAAkB;IAAEC,SAAS,EAAE;EAAQ,CAAC,EAC5E;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE,YAAY;IAAEC,SAAS,EAAE;EAAQ,CAAC,EACtE;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,SAAS;IAAEC,WAAW,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAQ,CAAC,EAC1E;IAAEH,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE,MAAM;IAAEC,WAAW,EAAE,gBAAgB;IAAEC,SAAS,EAAE;EAAQ,CAAC,CAC3E,CAAC;EAEF,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtD,MAAMc,eAAe,GAAIC,IAAI,IAAK;IAChCF,eAAe,CAACE,IAAI,CAAC;EACvB,CAAC;EAED,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5BH,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,IAAID,YAAY,EAAE;IAChB,oBACET,OAAA,CAACF,OAAO;MACNgB,QAAQ,EAAC,EAAE;MACXC,OAAO,EAAC,EAAE;MACVC,IAAI,EAAC,EAAE;MACPC,UAAU,EAAE,CAAE;MACdC,QAAQ,EAAET,YAAY,CAACH,IAAK;MAC5Ba,WAAW,EAAEN;IAAgB;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC;EAEN;EAEA,oBACEvB,OAAA;IAAKwB,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClCzB,OAAA;MAAIwB,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAK;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1CvB,OAAA;MAAKwB,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBtB,KAAK,CAACuB,GAAG,CAAEd,IAAI,iBACdZ,OAAA;QAAmBwB,SAAS,EAAC,WAAW;QAACG,OAAO,EAAEA,CAAA,KAAMhB,eAAe,CAACC,IAAI,CAAE;QAAAa,QAAA,gBAC5EzB,OAAA;UAAKwB,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACxBzB,OAAA;YAAIwB,SAAS,EAAC,WAAW;YAAAC,QAAA,EAAEb,IAAI,CAACN;UAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1CvB,OAAA;YAAGwB,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEb,IAAI,CAACL;UAAW;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eACNvB,OAAA;UAAMwB,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEb,IAAI,CAACJ;QAAS;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAL3CX,IAAI,CAACP,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACrB,EAAA,CAhDID,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAkDd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}