{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ozaki\\\\friend\\\\friend-app\\\\src\\\\Threads.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Threads = ({\n  userName,\n  content,\n  time,\n  replyCount,\n  roomName,\n  onBackClick\n}) => {\n  _s();\n  const [threads, setThreads] = useState([{\n    userName: \"test\",\n    content: \"test\",\n    time: \"1時間前\",\n    replyCount: 2\n  }]);\n  const [newThread, setNewThread] = useState({\n    userName: \"\",\n    content: \"\",\n    time: \"\",\n    replyCount: 0\n  });\n  const threadContainerRef = useRef(null);\n  const submitThread = () => {\n    const currentTime = new Date().toLocaleTimeString('ja-JP', {\n      hour: 'numeric',\n      minute: 'numeric'\n    });\n    const threadToAdd = {\n      ...newThread,\n      time: currentTime + \"に投稿\",\n      replyCount: 0\n    };\n    setThreads([threadToAdd, ...threads]);\n    setNewThread({\n      userName: \"\",\n      content: \"\",\n      time: \"\",\n      replyCount: 0\n    });\n  };\n  useEffect(() => {\n    if (threadContainerRef.current) {\n      threadContainerRef.current.scrollTop = 0;\n    }\n  }, [threads]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"threads-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"threads-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"back-button\",\n        onClick: onBackClick,\n        children: \"\\u2190\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"room-name\",\n        children: roomName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-container\",\n      ref: threadContainerRef,\n      children: threads.map((thread, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread thread-spacing\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thread-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"thread-avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"thread-username\",\n              children: thread.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"thread-time\",\n            children: thread.time\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thread-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: thread.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"thread-actions\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"action-button\",\n            children: [\"\\u8FD4\\u4FE1\\u6570\", thread.replyCount]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"thread-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"thread-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\",\n          value: newThread.userName,\n          onChange: e => setNewThread({\n            ...newThread,\n            userName: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\u5185\\u5BB9\",\n          value: newThread.content,\n          onChange: e => setNewThread({\n            ...newThread,\n            content: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: submitThread,\n          children: \"\\u6295\\u7A3F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Threads, \"+OWnwT+dDxMCAKtr8CuqltBj8EE=\");\n_c = Threads;\nvar _c;\n$RefreshReg$(_c, \"Threads\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Threads","userName","content","time","replyCount","roomName","onBackClick","_s","threads","setThreads","newThread","setNewThread","threadContainerRef","submitThread","currentTime","Date","toLocaleTimeString","hour","minute","threadToAdd","current","scrollTop","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","thread","index","type","placeholder","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/ozaki/friend/friend-app/src/Threads.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport './index.css';\r\n\r\ninterface ThreadsProps {\r\n    userName: string;\r\n    content: string;\r\n    time: string;\r\n    replyCount: number;\r\n    roomName: string;\r\n    onBackClick: () => void;\r\n}\r\n\r\nexport const Threads: React.FC<ThreadsProps> = ({ userName, content, time, replyCount, roomName, onBackClick }) => {\r\n    const [threads, setThreads] = useState([\r\n        {\r\n            userName: \"test\",\r\n            content: \"test\",\r\n            time: \"1時間前\",\r\n            replyCount: 2\r\n        }\r\n    ]);\r\n    const [newThread, setNewThread] = useState({\r\n        userName: \"\",\r\n        content: \"\",\r\n        time: \"\",\r\n        replyCount: 0\r\n    });\r\n\r\n    const threadContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n    const submitThread = () => {\r\n        const currentTime = new Date().toLocaleTimeString('ja-JP', { hour: 'numeric', minute: 'numeric' });\r\n        const threadToAdd = {\r\n            ...newThread,\r\n            time: currentTime + \"に投稿\",\r\n            replyCount: 0\r\n        };\r\n        setThreads([threadToAdd, ...threads]);\r\n        setNewThread({ userName: \"\", content: \"\", time: \"\", replyCount: 0 });\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (threadContainerRef.current) {\r\n            threadContainerRef.current.scrollTop = 0;\r\n        }\r\n    }, [threads]);\r\n\r\n    return (\r\n        <div className=\"threads-page\">\r\n            <header className=\"threads-header\">\r\n                <button className=\"back-button\" onClick={onBackClick}>←</button>\r\n                <h1 className=\"room-name\">{roomName}</h1>\r\n            </header>\r\n            <div className=\"thread-container\" ref={threadContainerRef}>\r\n                {threads.map((thread, index) => (\r\n                    <div key={index} className=\"thread thread-spacing\">\r\n                        <div className=\"thread-header\">\r\n                            <div className=\"user-info\">\r\n                                <div className=\"thread-avatar\"></div>\r\n                                <span className=\"thread-username\">{thread.userName}</span>\r\n                            </div>\r\n                            <span className=\"thread-time\">{thread.time}</span>\r\n                        </div>\r\n                        <div className=\"thread-content\">\r\n                            <p>{thread.content}</p>\r\n                        </div>\r\n                        <div className=\"thread-actions\">\r\n                            <button className=\"action-button\">返信数{thread.replyCount}</button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"thread-form-container\">\r\n                <div className=\"thread-form\">\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"ユーザー名\"\r\n                        value={newThread.userName}\r\n                        onChange={(e) => setNewThread({ ...newThread, userName: e.target.value })}\r\n                    />\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"内容\"\r\n                        value={newThread.content}\r\n                        onChange={(e) => setNewThread({ ...newThread, content: e.target.value })}\r\n                    />\r\n                    <button onClick={submitThread}>投稿</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}